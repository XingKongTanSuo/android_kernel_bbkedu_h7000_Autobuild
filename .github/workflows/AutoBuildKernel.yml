name: AutoBuild2

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python2 \
            flex \
            bison \
            libssl-dev \
            bc \
            libelf-dev \
            libncurses-dev

      - name: Fetch kernel source
        run: |
          git clone https://github.com/XingKongTanSuo/android_kernel_bbkedu_H7000.git --depth 1 kernelsource

      - name: Fetch and prepare toolchain
        run: |
          curl -o toolchain.zip https://bitbucket.org/jonascardoso/toolchain_aarch64_travis/get/517026371d60.zip
          unzip toolchain.zip -d toolchain
          chmod -R 755 toolchain

      - name: Apply kgsl fix
        run: |
          cd kernelsource
          mkdir -p include/trace/events/drivers/gpu/msm
          ln -sf $(pwd)/drivers/gpu/msm/kgsl_trace.h include/trace/events/drivers/gpu/msm/
          sed -i 's/#define TRACE_INCLUDE_PATH .*/#define TRACE_INCLUDE_PATH trace\/events\/drivers\/gpu\/msm/' drivers/gpu/msm/kgsl_trace.h
          sed -i 's/#include .*kgsl_trace.h"/#include "kgsl_trace.h"/' drivers/gpu/msm/kgsl_trace.c
          echo "ccflags-y += -I\$(srctree)/include/trace/events/drivers/gpu/msm" >> drivers/gpu/msm/Makefile
          echo "KBUILD_CFLAGS += -I\$(srctree)/include/trace/events/drivers/gpu/msm" >> Makefile
          
      - name: Configure kernel
        run: |
          cd kernelsource
          export ARCH=arm64
          export SUBARCH=arm64
          make h7000_defconfig
          ./scripts/config --file .config \
            --set-val CONFIG_KERNEL_GZIP y \
            --set-val CONFIG_KERNEL_BZIP2 n \
            --set-val CONFIG_KERNEL_LZMA n \
            --set-val CONFIG_KERNEL_XZ n \
            --set-val CONFIG_KERNEL_LZO n \
            --set-val CONFIG_KERNEL_LZ4 n \
            --set-val CONFIG_STACKPROTECTOR n \
            --set-val CONFIG_STACKPROTECTOR_STRONG n
          yes "" | make oldconfig

      - name: Build kernel
        run: |
          cd kernelsource
          export STOP_SHIP_TRACEPRINTK=1
          export LINUX_GCC_CROSS_COMPILE_PREBUILTS_BIN=/home/runner/work/android_kernel_bbkedu_h7000_Autobuild/android_kernel_bbkedu_h7000_Autobuild/toolchain/jonascardoso-toolchain_aarch64_travis-517026371d60/google_gcc/aarch64-linux-android-4.9/bin
          export ANDROID_AARCH64=/home/runner/work/android_kernel_bbkedu_h7000_Autobuild/android_kernel_bbkedu_h7000_Autobuild/toolchain/jonascardoso-toolchain_aarch64_travis-517026371d60/google_gcc/aarch64-linux-android-4.9/bin
          export ARCH=arm64
          export SUBARCH=arm64
          export PATH=$PATH:$ANDROID_AARCH64
          export CROSS_COMPILE=aarch64-linux-android-
          make -j2 | tee build.log

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_build
          path: |
            /home/runner/work/android_kernel_bbkedu_h7000_Autobuild/android_kernel_bbkedu_h7000_Autobuild/kernelsource/arch/arm64/boot/Image

